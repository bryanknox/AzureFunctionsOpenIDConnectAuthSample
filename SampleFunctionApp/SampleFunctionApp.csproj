<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <AzureFunctionsVersion>v4</AzureFunctionsVersion>
    <!--
    The `<_FunctionsSkipCleanOutput>true</_FunctionsSkipCleanOutput>` is needed to preserve
    all assemblies used by the function app even if they have the same name as assemblies used 
    in the Azure Functions run-time. `_FunctionsSkipCleanOutput` is undocumented, but is sometimes
    recommended. For example see:
    https://github.com/Azure/azure-functions-vs-build-sdk/issues/397
    
    An alternative to using `_FunctionsSkipCleanOutput` is to use `FunctionsPreservedDependencies`,
    which is (minimally) documented. It requires you to list the names of the specific assemblies
    that you do not want to be removed if the name matches an assembly used in the Azure Functions
    run-time. Hunting down the assembly names to list in `FunctionsPreservedDependencies` elements
    is time consuming, and will have to be updated as the assemblies used by the functions run-time
    or function app change.

    There is a list of assemblies that the functions run-time uses. That list is maintained at:
    https://github.com/Azure/azure-functions-host/blob/dev/tools/ExtensionsMetadataGenerator/test/ExtensionsMetadataGeneratorTests/ExistingRuntimeAssemblies.txt
    -->
    <_FunctionsSkipCleanOutput>true</_FunctionsSkipCleanOutput>
    <AssemblyVersion>0.1.1.0</AssemblyVersion>
    <FileVersion>0.1.1.0</FileVersion>
    <InformationalVersion>0.1.1-versioning.1+Branch.features-versioning.Sha.f0e1161cf12eb5db56b203c4d693c9fbb91dc87b</InformationalVersion>
    <Version>0.1.1-versioning0001</Version>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Azure.Functions.Extensions" Version="1.1.0" />
    <PackageReference Include="Microsoft.NET.Sdk.Functions" Version="4.0.1" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\OidcApiAuthorization\OidcApiAuthorization.csproj" />
  </ItemGroup>
  <ItemGroup>
    <None Update="host.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="local.settings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <CopyToPublishDirectory>Never</CopyToPublishDirectory>
    </None>
  </ItemGroup>
</Project>